{"version":3,"sources":["components/navbar/index.js","components/header/index.js","services/api.js","utils/relativeTime.js","components/story/index.js","components/story-wrapper/index.js","components/newstories/index.js","components/topstories/index.js","components/beststories/index.js","components/reply-wrapper/index.js","components/comment/index.js","components/comment-section/index.js","components/routes/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","NavLink","to","title","Header","components_navbar","getStoryType","type","getStories","getStoryList","storyType","axios","get","concat","getItem","id","RelativeTimeConverter","date","relativeDate","Date","now","min","parseInt","hour","day","Story","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","story","isFetched","_this2","API","then","res","resStory","url","data","by","time","descendants","setState","catch","err","href","Link","React","Component","StoryWrapper","stories","length","map","components_story","key","NewStories","loadMoreStories","pageNo","isLoaded","itemsPerPage","components_story_wrapper","slice","onClick","TopStories","BestStories","ReplyWrapper","values","kids","components_comment","Comment","toggleReplies","undefined","comment","toggleReply","isFeteched","resComment","test","dangerouslySetInnerHTML","__html","text","keys","reply_wrapper","CommentSection","match","params","Routes","BrowserRouter","components_header","Route","path","component","App","routes","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3949546.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\nimport { NavLink } from 'react-router-dom';\n\n\n/**\n * Functional component for Navbar.\n * \n * @param {*} props \n */\nconst Navbar = (props) => {\n\n  return (\n\n    <div className='navbar'>\n      <ul>\n        <NavLink to='/newstories'>\n          <li\n            className='nav-item'\n            title='newstories'>\n            New Storiess\n          </li>\n        </NavLink>\n        <NavLink to='/topstories'>\n          <li\n            className='nav-item'\n            title='topstories'>\n            Top Stories\n          </li>\n        </NavLink>\n        <NavLink to='/beststories'>\n          <li\n            className='nav-item'\n            title='beststories'>\n            Best Stories\n          </li>\n        </NavLink>\n      </ul>\n    </div>\n\n  )\n}\n\nexport default Navbar;","import React from 'react';\nimport Navbar from '../navbar';\nimport './index.css';\n\n/**\n * Functional component for Header.\n * \n * @param {*} props \n */\nconst Header = (props) => {\n\n  return (\n    <div className='header'>\n      <div className='title'>\n        <h1>Roit Hackernews</h1>\n      </div>\n      <Navbar\n        getStoryType={(type) => props.getStories(type)} />\n    </div>\n  )\n}\n\nexport default Header;","import axios from 'axios';\n\n/**\n * .Function to get top stories data from hackernews api.\n * \n * @param {*} storyType\n */\nconst getStoryList = (storyType) => {\n return axios.get(`https://hacker-news.firebaseio.com/v0/${storyType}.json`);\n};\n\n/**\n * .Function to get individual item data from hackernews api.\n * \n * @param {*} id\n */\nconst getItem = (id) => {\n  return axios.get(`https://hacker-news.firebaseio.com/v0/item/${id}.json`);\n};\n\n\nexport { getStoryList, getItem };\n","/**\n * Function to convert actual time to relative time.\n * \n * @param {Date} date \n */\nconst RelativeTimeConverter = (date) => {\n\n  const currentDate =  Date.now();\n\n  const relativeDate = currentDate - date;\n  \n  const min = 60 * 1000;\n  const hour = min * 60;\n  const day = hour * 24;\n  const week = day * 7;\n\n  if(relativeDate < min) {\n    return 'just now';\n  }else if(relativeDate < hour) {\n    return parseInt(relativeDate/min)+' minutes ago';\n  }else if(relativeDate < day) {\n    return parseInt(relativeDate/hour)+' hours ago';\n  }else if(relativeDate < week) {\n    return parseInt(relativeDate/day) +' days ago';\n  }else {\n    return parseInt(relativeDate/week) +' weeks ago';\n  }\n  \n};\n\nexport default RelativeTimeConverter;\n","import React from 'react';\nimport * as API from '../../services/api';\nimport './index.css';\nimport { Link } from 'react-router-dom';\nimport RelativeTimeConverter from '../../utils/relativeTime';\n\n\n\n/**\n * Story component for individual Story.\n * \n */\nclass Story extends React.Component {\n\n  /**\n   * Constructor for Story class.\n   * \n   * @param {*} props \n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      story: {},\n      isFetched: false\n    };\n\n  }\n\n  /**\n   * Function to call to the api to get story.\n   */\n  componentDidMount() {\n    API.getItem(this.props.id)\n      .then(res => {\n        const resStory = {};\n\n        resStory.url = res.data.url || '';\n        resStory.title = res.data.title || '';\n        resStory.by = res.data.by || '';\n        resStory.time = res.data.time || '';\n        resStory.descendants = res.data.descendants || 0;\n\n        this.setState({ isFetched: true, story: resStory })\n      })\n      .catch(err => err);\n  }\n\n  /**\n   * Function to Reder Story jsx.\n   */\n  render() {\n    {\n      if (!this.state.isFetched) {\n        return null;\n      }\n    }\n\n    return (\n      <div className='story'>\n        <h3><a href={this.state.story.url}>{this.state.story.title}</a></h3>\n        <div className='story-details'>\n          <span>By: {this.state.story.by}</span>\n          <span> {RelativeTimeConverter(this.state.story.time * 1000)}</span>\n          <span>\n            {(this.state.story.descendants === 0) ? '0 comments' :\n              <Link to={`story/${this.props.id}/comments`}>\n                {this.state.story.descendants} comments\n              </Link>\n            }\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Story;\n","import React from 'react';\nimport Story from '../story';\nimport './index.css';\n\n/**\n * Stateless Component to wrap all stories.\n * \n * @param {*} props \n */\nconst StoryWrapper = (props) => {\n\n  /**\n   * \n   */\n  return (\n    <div className='story-wrapper'>\n      {(props.stories.length !== 0) ?\n        props.stories.map(id =>\n          <Story\n            key={id}\n            id={id}\n          />\n        )\n        : <div>\n          <h1>No Stories</h1>\n        </div>\n      }\n\n    </div>\n  );\n};\n\n\nexport default StoryWrapper;\n","import React from 'react';\nimport StoryWrapper from '../story-wrapper';\nimport * as API from '../../services/api.js';\nimport './index.css';\n\n/**\n * Component for New Stories.\n */\nclass NewStories extends React.Component {\n\n  /**\n   * \n   * @param {*} props \n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      stories: [],\n      pageNo: 1,\n      itemsPerPage: 20\n    };\n  }\n\n  /**\n   * Function to call API and get new stories.\n   */\n  componentDidMount() {\n    API.getStoryList('newstories')\n      .then(res => this.setState({ isLoaded: true, stories: res.data }))\n      .catch(err => err);\n  }\n\n  loadMoreStories = () => {\n    this.setState({ pageNo: this.state.pageNo + 1 });\n  }\n\n  /**\n   * Function to render jsx.\n   */\n  render() {\n    return (\n      this.state.isLoaded\n        ? <div>\n          <StoryWrapper\n            key='newstories'\n            stories={this.state.stories.slice(\n              0,\n              this.state.pageNo * this.state.itemsPerPage)}\n          />\n          <div\n            className='pagination'\n            onClick={this.loadMoreStories}\n          >\n            <p>Load More</p>\n          </div>\n        </div>\n        : <h2>Loadiing...</h2>\n\n    );\n  }\n}\n\nexport default NewStories;\n","import React from 'react';\nimport StoryWrapper from '../story-wrapper';\nimport * as API from '../../services/api.js';\n\n/**\n * Component for top Stories.\n */\nclass TopStories extends React.Component {\n\n  /**\n   * \n   * @param {*} props \n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      stories: [],\n      pageNo: 1,\n      itemsPerPage: 20\n    };\n  }\n\n  /**\n   * Function to call API and get top stories.\n   */\n  componentDidMount() {\n    API.getStoryList('topstories')\n      .then(res => this.setState({ isLoaded: true, stories: res.data }))\n      .catch(err => err);\n  }\n\n  loadMoreStories = () => {\n    this.setState({ pageNo: this.state.pageNo + 1 });\n  }\n\n\n  /**\n   * \n   */\n  render() {\n    return (\n      this.state.isLoaded\n        ? <div>\n          <StoryWrapper\n            key='newstories'\n            stories={this.state.stories.slice(\n              0,\n              this.state.pageNo * this.state.itemsPerPage)}\n          />\n          <div\n            className='pagination'\n            onClick={this.loadMoreStories}\n          >\n            <p>Load More</p>\n          </div>\n        </div>\n        : <h2>Loadiing...</h2>\n    );\n  }\n}\n\nexport default TopStories;\n","import React from 'react';\nimport StoryWrapper from '../story-wrapper';\nimport * as API from '../../services/api.js';\n\n/**\n * Component for best Stories.\n */\nclass BestStories extends React.Component {\n\n  /**\n   * \n   * @param {*} props \n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      stories: [],\n      pageNo: 1,\n      itemsPerPage: 20\n    };\n  }\n\n  /**\n   * Function to call API and get best stories.\n   */\n  componentDidMount() {\n    API.getStoryList('beststories')\n      .then(res => this.setState({ isLoaded: true, stories: res.data }))\n      .catch(err => err);\n  }\n\n  loadMoreStories = () => {\n    this.setState({ pageNo: this.state.pageNo + 1 });\n  }\n\n\n  /**\n   * \n   */\n  render() {\n    return (\n      this.state.isLoaded\n        ? <div>\n          <StoryWrapper\n            key='beststories'\n            stories={this.state.stories.slice(\n              0,\n              this.state.pageNo * this.state.itemsPerPage)}\n          />\n          <div\n            className='pagination'\n            onClick={this.loadMoreStories}\n          >\n            <p>Load More</p>\n          </div>\n        </div>\n        : <h2>Loadiing...</h2>\n    );\n  }\n}\n\nexport default BestStories;\n","import React from 'react';\nimport Comment from '../comment';\n\n/**\n * Stateless component to render comment replies.\n * \n * @param {*} props \n */\nconst ReplyWrapper = (props) => {\n\n  /**\n   * \n   */\n  return (\n    <div>\n      {Object.values(props.kids).map(id =>\n        <Comment\n          key={id}\n          id={id}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ReplyWrapper;","import React from 'react';\nimport * as API from '../../services/api';\nimport './index.css';\nimport ReplyWrapper from '../reply-wrapper';\nimport RelativeTimeConverter from '../../utils/relativeTime';\n\n\n/**\n * Component to show comments.\n */\nclass Comment extends React.Component {\n\n  /**\n   * \n   * @param {*} props \n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: {},\n      toggleReply: false,\n      isFeteched: false\n    };\n  }\n\n  toggleReplies = () => {\n    if (this.state.comment.kids !== undefined) {\n      if (this.state.toggleReply) {\n        this.setState({ toggleReply: false });\n      } else {\n        this.setState({ toggleReply: true });\n      }\n    }\n\n  }\n\n  /**\n   * Function to call API to get comment Data.\n   */\n  componentDidMount() {\n    API.getItem(this.props.id)\n      .then(res => {\n        const resComment = {};\n\n        resComment.title = res.data.test || '';\n        resComment.by = res.data.by || '';\n        resComment.time = res.data.time || '';\n\n        this.setState({ isFeteched: true, comment: res.data })\n      })\n      .catch(err => err);\n  }\n\n  /**\n   * Function to render JSX.\n   */\n  render() {\n    if (!this.state.isFeteched) {\n      return null;\n    }\n\n    return (\n      <div className='comment clearfix'>\n        <h4>By: {this.state.comment.by}</h4>\n        <p dangerouslySetInnerHTML={{ __html: this.state.comment.text }}>\n        </p>\n        <div className='comment-details'>\n          <span> {RelativeTimeConverter(this.state.comment.time * 1000)}</span>\n          <span className=\"reply\" onClick={this.toggleReplies}>\n            {(this.state.comment.kids !== undefined)\n              ? Object.keys(this.state.comment.kids).length : 0} Replies\n          </span>\n        </div>\n        {this.state.toggleReply ?\n          <ReplyWrapper\n            kids={this.state.comment.kids}\n          />\n          : <div></div>}\n      </div>\n    );\n  }\n}\n\nexport default Comment;\n\n\n","import React from 'react';\nimport Comment from '../comment';\nimport * as API from '../../services/api';\nimport './index.css';\n\n/**\n * Component to wrap all comments of a story.\n * \n */\nclass CommentSection extends React.Component {\n  /**\n   * \n   * @param {*} props \n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      kids: []\n    };\n  }\n\n  /**\n   * Function to get comments from API through url param id.\n   */\n  componentDidMount() {\n    API.getItem(this.props.match.params.id)\n      .then(res => this.setState({ kids: res.data.kids }))\n      .catch(err => err);\n  }\n\n\n  /**\n   * Function to render jsx for comments.\n   */\n  render() {\n    return (\n      <div className='comment-section'>\n        {(this.state.kids !== undefined) ?\n          this.state.kids.map(id =>\n            <Comment\n              key={id}\n              id={id}\n            />\n          )\n          : <h1>No Comments Yet</h1>\n        }\n      </div>\n    )\n  }\n\n}\nexport default CommentSection;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from '../header';\nimport NewStories from '../newstories';\nimport TopStories from '../topstories';\nimport BestStories from '../beststories';\nimport CommentSection from '../comment-section';\n\n/**\n * State component for Routing.\n * \n */\nconst Routes = () => {\n\n  return (\n    <Router>\n      <div>\n        <Header\n        />\n        <div>\n          <Route path=\"/newstories\" component={NewStories} />\n          <Route path=\"/topstories\" component={TopStories} />\n          <Route path=\"/beststories\" component={BestStories} />\n          <Route path=\"/story/:id/comments\" component={CommentSection} />\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Routes from './components/routes';\n\n\n\n\n/**\n * App Class to render all components and include the app logic.\n * \n */\nclass App extends Component {\n\n  /**\n   * \n   * @param {*} props \n   */\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n  }\n\n  /**\n   * \n   */\n  render() {\n    return (\n      <Routes />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}